module.exports.config = {
  name: "mal",
  version: "1.0.1",
  permission: 0,
  credits: "Modified by Rebel from ZiaRein",
  description: "MyAnimeList ‡¶•‡ßá‡¶ï‡ßá ‡¶è‡¶®‡¶ø‡¶Æ‡ßá ‡¶ñ‡ßã‡¶Å‡¶ú ‡¶ï‡¶∞‡ßÅ‡¶®",
  category: "rebel",
  prefix: false,
  usages: "[anime ‡¶è‡¶∞ ‡¶®‡¶æ‡¶Æ]",
  cooldowns: 5
};

module.exports.run = async ({ api, event }) => {
  const axios = require("axios");
  const Scraper = require('mal-scraper');
  const request = require("request");
  const fs = require("fs");

  let input = event.body;

  // Check if user provided search query
  const args = input.split(" ");
  if (args.length < 2) {
    return api.sendMessage("‚ö†Ô∏è ‡¶Ö‡¶®‡ßÅ‡¶ó‡ßç‡¶∞‡¶π ‡¶ï‡¶∞‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶è‡¶®‡¶ø‡¶Æ‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®‡•§\n‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶£: mal One Piece", event.threadID, event.messageID);
  }

  let query = args.slice(1).join(" "); // Remove 'mal' word
  api.sendMessage(`üîç ‡¶Ö‡¶®‡ßÅ‡¶∏‡¶®‡ßç‡¶ß‡¶æ‡¶® ‡¶ö‡¶≤‡¶õ‡ßá:\n„Äê ${query} „Äë`, event.threadID, event.messageID);

  try {
    const Anime = await Scraper.getInfoFromName(query);

    if (!Anime) {
      return api.sendMessage("‚ö†Ô∏è ‡¶ï‡ßã‡¶® ‡¶è‡¶®‡¶ø‡¶Æ‡ßá ‡¶™‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶Ø‡¶æ‡¶Ø‡¶º‡¶®‡¶ø!", event.threadID, event.messageID);
    }

    const getURL = Anime.picture;
    const ext = getURL.substring(getURL.lastIndexOf(".") + 1) || "jpg";

    // Safe array joins
    const producers = Array.isArray(Anime.producers) ? Anime.producers.join(", ") : "None";
    const studios = Array.isArray(Anime.studios) ? Anime.studios.join(", ") : "None";
    const genres = Array.isArray(Anime.genres) ? Anime.genres.join(", ") : "None";

    const details = 
`üé¥ ‡¶∂‡¶ø‡¶∞‡ßã‡¶®‡¶æ‡¶Æ: ${Anime.title}
üéå ‡¶ú‡¶æ‡¶™‡¶æ‡¶®‡¶ø ‡¶®‡¶æ‡¶Æ: ${Anime.japaneseTitle}
üì∫ ‡¶ß‡¶∞‡¶®: ${Anime.type}
‚ôªÔ∏è ‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∏: ${Anime.status}
üóìÔ∏è ‡¶™‡ßç‡¶∞‡¶ö‡¶æ‡¶∞ ‡¶∂‡ßÅ‡¶∞‡ßÅ: ${Anime.premiered}
üï∞Ô∏è ‡¶∏‡¶Æ‡ßç‡¶™‡ßç‡¶∞‡¶ö‡¶æ‡¶∞ ‡¶∏‡¶Æ‡ßü: ${Anime.broadcast}
üóìÔ∏è ‡¶∏‡¶Æ‡ßç‡¶™‡ßç‡¶∞‡¶ö‡¶æ‡¶∞‡¶ø‡¶§ ‡¶π‡ßü‡ßá‡¶õ‡ßá: ${Anime.aired}
üé¨ ‡¶®‡¶ø‡¶∞‡ßç‡¶Æ‡¶æ‡¶§‡¶æ: ${producers}
üè¢ ‡¶∏‡ßç‡¶ü‡ßÅ‡¶°‡¶ø‡¶ì: ${studios}
üìö ‡¶â‡ßé‡¶∏: ${Anime.source}
üìΩÔ∏è ‡¶™‡¶∞‡ßç‡¶¨ ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ: ${Anime.episodes}
‚è≥ ‡¶∏‡¶Æ‡ßü‡¶ï‡¶æ‡¶≤: ${Anime.duration}
üè∑Ô∏è ‡¶ò‡¶∞‡¶æ‡¶®‡¶æ: ${genres}
üî• ‡¶ú‡¶®‡¶™‡ßç‡¶∞‡¶ø‡¶Ø‡¶º‡¶§‡¶æ: ${Anime.popularity}
üèÜ ‡¶∞‚Äç‡ßç‡¶Ø‡¶æ‡¶ô‡ßç‡¶ï: ${Anime.ranked}
‚≠ê ‡¶∏‡ßç‡¶ï‡ßã‡¶∞: ${Anime.score}
üîû ‡¶∞‡ßá‡¶ü‡¶ø‡¶Ç: ${Anime.rating}

üìù ‡¶∏‡¶æ‡¶∞‡¶æ‡¶Ç‡¶∂:
${Anime.synopsis}

üîó ‡¶≤‡¶ø‡¶ô‡ßç‡¶ï: ${Anime.url}`;

    const callback = () => {
      api.sendMessage({
        body: details,
        attachment: fs.createReadStream(__dirname + `/cache/mal.${ext}`)
      }, event.threadID, () => fs.unlinkSync(__dirname + `/cache/mal.${ext}`), event.messageID);
    };

    request(getURL).pipe(fs.createWriteStream(__dirname + `/cache/mal.${ext}`)).on("close", callback);

  } catch (err) {
    console.error(err);
    api.sendMessage(`‚ö†Ô∏è ‡¶§‡ßç‡¶∞‡ßÅ‡¶ü‡¶ø ‡¶ò‡¶ü‡ßá‡¶õ‡ßá:\n${err.message}`, event.threadID, event.messageID);
  }
};
