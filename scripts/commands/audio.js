const axios = require("axios");
const fs = require("fs-extra");
const ytdl = require("@distube/ytdl-core");
const yts = require("yt-search");

module.exports.config = {
  name: "music",
  version: "2.0.4",
  permssion: 0,
  prefix: true,
  credits: "DRIDI-RAYEN - Converted by ChatGPT",
  description: "‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶™‡¶õ‡¶®‡ßç‡¶¶‡ßá‡¶∞ ‡¶ó‡¶æ‡¶® ‡¶ö‡¶æ‡¶≤‡¶æ‡¶®",
  category: "üîç ‡¶Ö‡¶®‡ßÅ‡¶∏‡¶®‡ßç‡¶ß‡¶æ‡¶®",
  usages: "[‡¶ó‡¶æ‡¶®‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ]",
  cooldowns: 10,
  dependencies: {
    "fs-extra": "",
    "request": "",
    "axios": "",
    "ytdl-core": "",
    "yt-search": ""
  }
};

module.exports.run = async ({ api, event }) => {
  const input = event.body;
  const args = input.split(" ");

  if (args.length < 2) {
    return api.sendMessage("‚ö†Ô∏è ‡¶Ö‡¶®‡ßÅ‡¶ó‡ßç‡¶∞‡¶π ‡¶ï‡¶∞‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶ó‡¶æ‡¶®‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®!", event.threadID, event.messageID);
  }

  args.shift();
  const songName = args.join(" ");

  try {
    const infoMsg = await api.sendMessage(`üîç ‡¶ó‡¶æ‡¶® ‡¶ñ‡ßã‡¶Å‡¶ú‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá: „Äé${songName}„Äè\n‡¶Ö‡¶®‡ßÅ‡¶ó‡ßç‡¶∞‡¶π ‡¶ï‡¶∞‡ßá ‡¶Ö‡¶™‡ßá‡¶ï‡ßç‡¶∑‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®...`, event.threadID);

    const searchResults = await yts(songName);
    if (!searchResults.videos.length) {
      return api.sendMessage("‚ùå ‡¶ï‡ßã‡¶®‡ßã ‡¶´‡¶≤‡¶æ‡¶´‡¶≤ ‡¶™‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶Ø‡¶æ‡¶Ø‡¶º‡¶®‡¶ø‡•§", event.threadID, event.messageID);
    }

    const video = searchResults.videos[0];
    const videoUrl = video.url;

    const stream = ytdl(videoUrl, { filter: "audioonly" });

    const fileName = `${event.senderID}.mp3`;
    const filePath = `${__dirname}/cache/${fileName}`;

    stream.pipe(fs.createWriteStream(filePath));

    stream.on('response', () => {
      console.log('[DOWNLOADER] ‡¶ó‡¶æ‡¶® ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶π‡ßü‡ßá‡¶õ‡ßá...');
    });

    stream.on('info', (info) => {
      console.log('[DOWNLOADER]', `Downloading: ${info.videoDetails.title} by ${info.videoDetails.author.name}`);
    });

    stream.on('end', () => {
      console.log('[DOWNLOADER] ‡¶ó‡¶æ‡¶® ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° ‡¶∏‡¶Æ‡ßç‡¶™‡¶®‡ßç‡¶® ‡¶π‡ßü‡ßá‡¶õ‡ßá‡•§');

      if (fs.statSync(filePath).size > 26214400) {
        fs.unlinkSync(filePath);
        return api.sendMessage('‚ùå ‡¶´‡¶æ‡¶á‡¶≤‡¶ü‡¶ø ‡ß®‡ß´MB ‡¶è‡¶∞ ‡¶¨‡ßá‡¶∂‡¶ø ‡¶π‡¶ì‡ßü‡¶æ‡ßü ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã ‡¶Ø‡¶æ‡¶ö‡ßç‡¶õ‡ßá ‡¶®‡¶æ‡•§', event.threadID);
      }

      const message = {
        body: `‚úÖ ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶ó‡¶æ‡¶®‡¶ü‡¶ø ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá:\n\nüé∂ ‡¶∂‡¶ø‡¶∞‡ßã‡¶®‡¶æ‡¶Æ: ${video.title}\nüë§ ‡¶∂‡¶ø‡¶≤‡ßç‡¶™‡ßÄ: ${video.author.name}`,
        attachment: fs.createReadStream(filePath)
      };

      api.unsendMessage(infoMsg.messageID);
      api.sendMessage(message, event.threadID, () => {
        fs.unlinkSync(filePath);
      });
    });

  } catch (error) {
    console.error('[ERROR]', error);
    api.sendMessage('‚ùó ‡¶è‡¶ï‡¶ü‡¶ø ‡¶§‡ßç‡¶∞‡ßÅ‡¶ü‡¶ø ‡¶ò‡¶ü‡ßá‡¶õ‡ßá, ‡¶Ö‡¶®‡ßÅ‡¶ó‡ßç‡¶∞‡¶π ‡¶ï‡¶∞‡ßá ‡¶™‡¶∞‡ßá ‡¶Ü‡¶¨‡¶æ‡¶∞ ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§', event.threadID);
  }
};
